var $=Object.defineProperty;var H=(o,e,t)=>e in o?$(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var i=(o,e,t)=>(H(o,typeof e!="symbol"?e+"":e,t),t);import{V as x,a as y,E as V,R as q,G as W,F as Q,B as P,b as B,U as X,C as D,M as v,m as J,I as T,S as _,c as O,D as Z,d as j,P as ee,e as te,O as se,f as ie,g as ne,h as re,i as oe,T as ae,j as C,k as he,H as ce,l as le,n as ue,W as me,o as de,p as N,q as fe,r as pe,s as ge,t as we,u as be,L as ye,v as Ee,Q as Se}from"./vendor.90aa72e4.js";const Me=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerpolicy&&(r.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?r.credentials="include":n.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(n){if(n.ep)return;n.ep=!0;const r=t(n);fetch(n.href,r)}};Me();class M{constructor(e,t,s,n,r){i(this,"header");i(this,"assets");i(this,"g3d");i(this,"bim");i(this,"strings");this.header=e,this.assets=t,this.g3d=s,this.bim=n,this.strings=r}}i(M,"tableElement","Vim.Element"),i(M,"tableNode","Vim.Node");class ve{constructor(e,t,s,n){i(this,"meshes");i(this,"boundingSphere");i(this,"nodeIndexToMeshInstance");i(this,"meshIdToNodeIndex");this.meshes=e,this.boundingSphere=t,this.nodeIndexToMeshInstance=s,this.meshIdToNodeIndex=n}getNodeCount(){return this.nodeIndexToMeshInstance.size}getMeshCount(){return this.meshes.length}}class R{constructor(e,t){i(this,"vim");i(this,"geometry");i(this,"elementToNodes");this.vim=e,this.geometry=t,this.elementToNodes=this.mapElements()}mapElements(){const e=this.geometry.getNodeCount(),t=new Map;for(let s=0;s<e;s++){const n=this.getElementIdFromNodeIndex(s),r=t.get(n);r?r.push(s):t.set(n,[s])}return t}getNodeIndicesFromElement(e){return this.elementToNodes.get(e)}getMeshesFromElement(e){const t=this.getNodeIndicesFromElement(e);if(!t||!t.length)return;const s=[];return t.forEach(n=>{s.push(this.getMeshFromNodeIndex(n))}),s}getMeshFromNodeIndex(e){if(e<0)throw new Error("Invalid negative index");return this.geometry.nodeIndexToMeshInstance.get(e)}getNodeIndexFromMesh(e,t){if(t<0)throw new Error("Invalid negative index");if(!e)throw new Error("Invalid null mesh");const s=this.geometry.meshIdToNodeIndex.get(e.id);if(!!s)return s[t]}getElementIdFromMesh(e,t){if(t<0)throw new Error("Invalid negative index");if(!e)throw new Error("Invalid null mesh");const s=this.getNodeIndexFromMesh(e,t);if(s!==void 0)return this.getElementIndexFromNodeIndex(s)}getElementIndexFromNodeIndex(e){if(e<0)throw new Error("Invalid negative index");return this.vim.bim.get(M.tableNode).get(M.tableElement)[e]}getElementIdFromNodeIndex(e){if(e<0)throw new Error("Invalid negative node index");const t=this.getElementIndexFromNodeIndex(e);if(t!==void 0)return this.vim.bim.get(M.tableElement).get("Id")[t]}getElementNameFromNodeIndex(e){if(e<0)throw new Error("Invalid negative node index");const t=this.getElementIndexFromNodeIndex(e);if(t===void 0)return;const s=this.vim.bim.get(M.tableElement).get("Name")[t];return this.getStringFromIndex(s)}getStringFromIndex(e){if(e<0)throw new Error("Invalid negative string index");return this.vim.strings[e]}}const xe={default:{showGui:!0,showStats:!0,camera:{near:.1,far:15e3,fov:50,zoom:1,rotate:1,controls:{speed:.1,shiftMultiplier:5,zoomSpeed:.2,rotateSpeed:.01,panSpeed:.1}},background:{color:{r:114,g:100,b:91}},plane:{show:!0,material:{color:{r:153,g:153,b:153},specular:{r:16,g:16,b:16}},position:{x:0,y:0,z:0}},skylight:{skyColor:{h:.6,s:1,l:.6},groundColor:{h:.095,s:1,l:.75},intensity:.6},sunLight:{position:{x:-1*30,y:1.75*30,z:1*30},color:{h:.1,s:1,l:.95},intensity:1},object:{scale:.01,position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:0},material:{color:{r:0,g:85,b:255},emissive:{r:0,g:0,b:0},specular:{r:17,g:17,b:17},flatShading:!0,shininess:30,wireframe:!1}}}},Ie={forward:new y(0,0,-1),back:new y(0,0,1),left:new y(-1,0,0),right:new y(1,0,0),up:new y(0,1,0),down:new y(0,-1,0)};class De{constructor(e,t){i(this,"MinOrbitalDistance",1);i(this,"camera");i(this,"settings");i(this,"Rotation");i(this,"InputVelocity");i(this,"Velocity");i(this,"Impulse");i(this,"SpeedMultiplier");i(this,"Orbit");i(this,"CenterOfInterest");i(this,"OrbitalTarget");i(this,"CurrentOrbitalDistance");i(this,"TargetOrbitalDistance");i(this,"MouseRotate",!1);i(this,"MouseOrbit",!1);i(this,"MouseMoveDolly",!1);i(this,"MouseMovePan",!1);i(this,"VelocityBlendFactor",1e-4);this.camera=e,this.applySettings(t),this.Rotation=new x(0,0),this.InputVelocity=new y(0,0,0),this.Velocity=new y(0,0,0),this.Impulse=new y(0,0,0),this.SpeedMultiplier=0,this.Orbit=!1,this.CenterOfInterest=new y(0,0,0),this.OrbitalTarget=new y(0,0,0),this.CurrentOrbitalDistance=e.position.clone().sub(this.OrbitalTarget).length(),this.TargetOrbitalDistance=this.CurrentOrbitalDistance}lookAt(e){this.camera.lookAt(e)}lookAtSphere(e,t=!1){t&&this.camera.position.setY(e.center.y);const s=this.camera.position.clone().sub(e.center).normalize(),n=this.camera.fov*Math.PI/180,r=1.33*e.radius*(1+2/Math.tan(n)),a=s.clone().multiplyScalar(r).add(e.center);this.camera.lookAt(e.center),this.camera.position.copy(a),this.OrbitalTarget=e.center,this.CurrentOrbitalDistance=this.OrbitalTarget.clone().sub(a).length(),this.CurrentOrbitalDistance=this.TargetOrbitalDistance}frameScene(e){this.camera.position.copy(e.center.clone().add(new y(0,e.radius,-2*e.radius))),this.camera.lookAt(e.center),this.OrbitalTarget=e.center,this.CurrentOrbitalDistance=this.OrbitalTarget.clone().sub(this.camera.position).length(),this.CurrentOrbitalDistance=this.TargetOrbitalDistance}applySettings(e){this.camera.fov=e.camera.fov,this.camera.zoom=e.camera.zoom,this.camera.near=e.camera.near,this.camera.far=e.camera.far,this.settings=e}applyLocalImpulse(e){const t=e.clone();t.applyQuaternion(this.camera.quaternion),this.Impulse.add(t)}moveCameraBy(e=Ie.forward,t=1,s=!1){const n=new y;n.copy(e),t&&n.multiplyScalar(t),n.applyQuaternion(this.camera.quaternion);const r=this.camera.position.y;this.camera.position.add(n),s&&(this.camera.position.y=r)}panCameraBy(e){const t=this.settings.camera.controls.panSpeed;this.moveCameraBy(new y(-e.x,e.y,0),t)}rotateCameraBy(e){const t=new V(0,0,0,"YXZ");t.setFromQuaternion(this.camera.quaternion),t.y+=-e.x*this.settings.camera.controls.rotateSpeed,t.x+=-e.y*this.settings.camera.controls.rotateSpeed,t.z=0;const s=Math.PI/2,n=-2*Math.PI,r=2*Math.PI;t.x=Math.max(s-r,Math.min(s-n,t.x)),this.camera.quaternion.setFromEuler(t),this.MouseOrbit||(this.OrbitalTarget=this.camera.position.clone().add(new y(0,0,1).applyQuaternion(this.camera.quaternion).multiplyScalar(this.CurrentOrbitalDistance)))}getSpeedMultiplier(){return Math.pow(1.1,this.SpeedMultiplier)}updateOrbitalDistance(e){this.TargetOrbitalDistance-=e*this.getSpeedMultiplier(),this.TargetOrbitalDistance=Math.max(this.TargetOrbitalDistance,this.MinOrbitalDistance)}frameUpdate(e){const t=this.GetInputVelocity();t.multiplyScalar(this.getSpeedMultiplier()),t.applyQuaternion(this.camera.quaternion);const s=Math.pow(this.VelocityBlendFactor,e),n=1-s;this.Velocity.multiplyScalar(s),t.multiplyScalar(n),this.Velocity.add(t),this.CurrentOrbitalDistance=this.CurrentOrbitalDistance*s+this.TargetOrbitalDistance*n;const r=this.Velocity.clone().multiplyScalar(e),a=this.Impulse.clone().multiplyScalar(n);r.add(a),this.Impulse.multiplyScalar(s),this.camera.position.add(r),this.OrbitalTarget.add(r),r.length()>0&&this.GetInputVelocity(),this.MouseOrbit&&(this.camera.position.set(0,0,this.CurrentOrbitalDistance),this.camera.position.applyQuaternion(this.camera.quaternion),this.camera.position.add(this.OrbitalTarget))}GetInputVelocity(){return this.InputVelocity.clone()}}const E={KEY_0:48,KEY_1:49,KEY_2:50,KEY_3:51,KEY_4:52,KEY_5:53,KEY_6:54,KEY_7:55,KEY_8:56,KEY_9:57,KEY_LEFT:37,KEY_RIGHT:39,KEY_UP:38,KEY_DOWN:40,KEY_CTRL:17,KEY_SHIFT:16,KEY_ENTER:13,KEY_SPACE:32,KEY_TAB:9,KEY_ESCAPE:27,KEY_BACKSPACE:8,KEY_HOME:36,KEY_END:35,KEY_INSERT:45,KEY_DELETE:46,KEY_ALT:18,KEY_F1:112,KEY_F2:113,KEY_F3:114,KEY_F4:115,KEY_F5:116,KEY_F6:117,KEY_F7:118,KEY_F8:119,KEY_F9:120,KEY_F10:121,KEY_F11:122,KEY_F12:123,KEY_NUMPAD0:96,KEY_NUMPAD1:97,KEY_NUMPAD2:98,KEY_NUMPAD3:99,KEY_NUMPAD4:100,KEY_NUMPAD5:101,KEY_NUMPAD6:102,KEY_NUMPAD7:103,KEY_NUMPAD8:104,KEY_NUMPAD9:105,KEY_ADD:107,KEY_SUBTRACT:109,KEY_MULTIPLY:106,KEY_DIVIDE:111,KEY_SEPARATOR:108,KEY_DECIMAL:110,KEY_OEM_PLUS:187,KEY_OEM_MINUS:189,KEY_A:65,KEY_B:66,KEY_C:67,KEY_D:68,KEY_E:69,KEY_F:70,KEY_G:71,KEY_H:72,KEY_I:73,KEY_J:74,KEY_K:75,KEY_L:76,KEY_M:77,KEY_N:78,KEY_O:79,KEY_P:80,KEY_Q:81,KEY_R:82,KEY_S:83,KEY_T:84,KEY_U:85,KEY_V:86,KEY_W:87,KEY_X:88,KEY_Y:89,KEY_Z:90};class Te{constructor(e,t,s){i(this,"MaximumInclination",1.4);i(this,"ShiftMultiplier",3);i(this,"MinimumSpeedDifference",.01);i(this,"VelocityBlendFactor",1e-4);i(this,"BaseKeyboardSpeed",5);i(this,"camera");i(this,"viewer");i(this,"mouse");i(this,"shftDown",!1);i(this,"reset",()=>{this.shftDown=!1});i(this,"onKeyUp",e=>{this.onKey(e,!1)});i(this,"onKeyDown",e=>{this.onKey(e,!0)});i(this,"onKey",(e,t)=>{if(!t)switch(e.keyCode){case E.KEY_ADD:case E.KEY_OEM_PLUS:this.camera.SpeedMultiplier+=1;break;case E.KEY_SUBTRACT:case E.KEY_OEM_MINUS:this.camera.SpeedMultiplier-=1;break;case E.KEY_F8:this.camera.MouseOrbit=!this.camera.MouseOrbit,this.camera.MouseOrbit&&(this.camera.CurrentOrbitalDistance=this.camera.OrbitalTarget.clone().sub(this.camera.camera.position).length(),this.camera.TargetOrbitalDistance=this.camera.CurrentOrbitalDistance);break;case E.KEY_HOME:this.camera.frameScene(this.viewer.render.boundingSphere);break;case E.KEY_ESCAPE:this.viewer.clearSelection();break;case E.KEY_Z:this.viewer.focusSelection();break}const s=t?this.BaseKeyboardSpeed*(this.shftDown?this.ShiftMultiplier:1):0;switch(e.keyCode){case E.KEY_W:case E.KEY_UP:this.camera.InputVelocity.z=-s;break;case E.KEY_S:case E.KEY_DOWN:this.camera.InputVelocity.z=s;break;case E.KEY_D:case E.KEY_RIGHT:this.camera.InputVelocity.x=s;break;case E.KEY_A:case E.KEY_LEFT:this.camera.InputVelocity.x=-s;break;case E.KEY_E:this.camera.InputVelocity.y=s;break;case E.KEY_Q:this.camera.InputVelocity.y=-s;break;case E.KEY_CTRL:this.mouse.setCtrl(t);break;case E.KEY_SHIFT:this.shftDown!==t&&(this.shftDown=t,t?this.camera.InputVelocity.multiplyScalar(this.ShiftMultiplier):this.camera.InputVelocity.multiplyScalar(1/this.ShiftMultiplier));break}e.preventDefault()});this.camera=e,this.viewer=t,this.mouse=s}}class Ce{constructor(e,t,s){i(this,"TouchMoveSensitivity");i(this,"TouchRotateSensitivity");i(this,"TapDurationMs",500);i(this,"camera");i(this,"viewer");i(this,"mouse");i(this,"touchStart");i(this,"touchStart1");i(this,"touchStart2");i(this,"touchStartTime");i(this,"reset",()=>{this.touchStart=this.touchStart1=this.touchStart2=this.touchStartTime=void 0});i(this,"onTap",e=>{this.mouse.onMouseClick(e)});i(this,"onTouchStart",e=>{e.preventDefault(),!(!e||!e.touches||!e.touches.length)&&(this.touchStartTime=new Date().getTime(),e.touches.length===1?(this.touchStart=this.touchToVector(e.touches[0]),this.touchStart1=this.touchStart2=void 0):e.touches.length===2&&(this.touchStart1=this.touchToVector(e.touches[0]),this.touchStart2=this.touchToVector(e.touches[1]),this.touchStart=this.average(this.touchStart1,this.touchStart2)))});i(this,"onDrag",e=>{this.camera.rotateCameraBy(e)});i(this,"onDoubleDrag",e=>{const t=this.viewer.getViewMatrix(),s=new y(e.x,0,e.y).applyMatrix4(t);this.camera.moveCameraBy(s,e.length())});i(this,"onPinchSpread",e=>{const t=this.viewer.getViewMatrix(),s=new y(0,e,0).applyMatrix4(t);this.camera.moveCameraBy(s,Math.abs(e))});i(this,"onTouchMove",e=>{if(e.preventDefault(),!(!e||!e.touches||!e.touches.length)&&!!this.touchStart){if(e.touches.length===1){const t=this.touchToVector(e.touches[0]),s=t.clone().sub(this.touchStart);this.touchStart=t,this.onDrag(s);return}if(!(!this.touchStart1||!this.touchStart2)&&e.touches.length>=2){const t=this.touchToVector(e.touches[0]),s=this.touchToVector(e.touches[1]),n=this.average(t,s),r=this.touchStart.clone().sub(n),a=t.distanceTo(s),h=this.touchStart1.distanceTo(this.touchStart2),d=a-h;this.touchStart=n,this.touchStart1=t,this.touchStart2=s,r.length()>Math.abs(d)?this.onDoubleDrag(r):this.onPinchSpread(d)}}});i(this,"onTouchEnd",e=>{this.isSingleTouch()&&new Date().getTime()-this.touchStartTime<this.TapDurationMs&&this.onTap(this.touchStart),this.reset()});this.camera=e,this.viewer=t,this.mouse=s,this.TouchMoveSensitivity=this.mouse.MouseMoveSensitivity*20,this.TouchRotateSensitivity=this.mouse.MouseRotateSensitivity}isSingleTouch(){return this.touchStart!==void 0&&this.touchStartTime!==void 0&&this.touchStart1===void 0&&this.touchStart2===void 0}touchToVector(e){return new x(e.pageX,e.pageY)}average(e,t){return e.clone().lerp(t,.5)}}class Ke{constructor(e,t,s){i(this,"MouseMoveSensitivity",.05);i(this,"MouseRotateSensitivity",.2);i(this,"MouseScrollSensitivity",.05);i(this,"camera");i(this,"canvas");i(this,"viewer");i(this,"isMouseDown",!1);i(this,"hasMouseMoved",!1);i(this,"ctrlDown",!1);i(this,"reset",()=>{this.isMouseDown=this.hasMouseMoved=this.ctrlDown=!1});i(this,"setCtrl",e=>{this.ctrlDown=e});i(this,"onMouseMove",e=>{if(!this.isMouseDown)return;this.hasMouseMoved=!0,e.preventDefault();const t=e.movementX||e.mozMovementX||e.webkitMovementX||0,s=e.movementY||e.mozMovementY||e.webkitMovementY||0,n=new x(t,s);e.buttons&2?this.camera.panCameraBy(n):(n.multiplyScalar(this.MouseRotateSensitivity),this.camera.rotateCameraBy(n))});i(this,"onMouseWheel",e=>{if(e.preventDefault(),e.stopPropagation(),this.ctrlDown)this.camera.SpeedMultiplier-=e.deltaY*.01;else if(this.camera.MouseOrbit)this.camera.updateOrbitalDistance(-e.deltaY*this.MouseScrollSensitivity);else{const t=new y(0,0,e.deltaY*this.MouseScrollSensitivity*this.camera.getSpeedMultiplier());this.camera.applyLocalImpulse(t)}});i(this,"onMouseDown",e=>{e.preventDefault(),this.isMouseDown=!0,this.hasMouseMoved=!1,this.canvas.focus?this.canvas.focus():window.focus()});i(this,"onMouseUp",e=>{this.isMouseDown&&!this.hasMouseMoved&&this.onMouseClick(new x(e.x,e.y)),this.isMouseDown=!1});i(this,"onMouseClick",e=>{});this.camera=e,this.canvas=t,this.viewer=s}mouseRaycast(e){const t=e.x/window.innerWidth*2-1,s=-(e.y/window.innerHeight)*2+1,n=new x(t,s),r=new q;return r.setFromCamera(n,this.camera.camera),r.intersectObjects(this.viewer.render.meshes)}}class Ye{constructor(e,t,s){i(this,"canvas");i(this,"unregisters");i(this,"touch");i(this,"mouse");i(this,"keyboard");i(this,"reg",(e,t,s)=>{e.addEventListener(t,s),this.unregisters.push(()=>e.removeEventListener(t,s))});i(this,"unregister",()=>{this.unregisters.forEach(e=>e()),this.reset()});this.canvas=e,this.unregisters=[],this.mouse=new Ke(t,e,s),this.touch=new Ce(t,s,this.mouse),this.keyboard=new Te(t,s,this.mouse)}register(){this.reg(this.canvas,"mousedown",this.mouse.onMouseDown),this.reg(this.canvas,"wheel",this.mouse.onMouseWheel),this.reg(this.canvas,"mousemove",this.mouse.onMouseMove),this.reg(this.canvas,"mouseup",this.mouse.onMouseUp),this.reg(this.canvas,"touchstart",this.touch.onTouchStart),this.reg(this.canvas,"touchend",this.touch.onTouchEnd),this.reg(this.canvas,"touchmove",this.touch.onTouchMove),this.reg(document,"keydown",this.keyboard.onKeyDown),this.reg(document,"keyup",this.keyboard.onKeyUp)}reset(){this.mouse.reset(),this.keyboard.reset(),this.touch.reset()}}let Ae=0;class G{constructor(e,t){i(this,"id",Ae++);i(this,"name","");i(this,"vis",!0);i(this,"min");i(this,"max");i(this,"step");i(this,"choices");i(this,"options");i(this,"def");i(this,"type");this.type=e,this.def=t}setStep(e){return this.step=e,this}setRange(e,t){return this.min=e,this.max=t,this}setName(e){return this.name=e,this}setChoices(e){return this.choices=e,this}setOptions(e){return this.options=e,this}}class K{constructor(e){i(this,"_value");this._desc=e,this._value=e.def}get name(){return this._desc.name}get value(){return this._value}set value(e){this._value=e}}class F{constructor(e,t=""){i(this,"items",[]);this.desc=e,this.name=t;for(const s in e){const n=e[s];n instanceof G?this.items.push(new K(n)):this.items.push(new F(n,s))}}fromJson(e){for(const t of this.items)if(t.name in e){const s=e[t.name];t instanceof K?t.value=s:t.fromJson(s)}return this}get toJson(){const e={};for(const t of this.items)t instanceof K?e[t.name]=t.value:e[t.name]=t.toJson;return e}find(e){return this.items.find(t=>t.name===e)}}const _e={gui:new W,bind:function(o,e){const t=n(o,{}),s=new F(t);s.fromJson(o),r(s,this.gui,()=>e(s.toJson));function n(l,u){for(const m in l){const p=l[m];switch(typeof p){case"number":u[m]=w(p).setName(m);break;case"string":u[m]=g(p).setName(m);break;case"boolean":u[m]=d(p).setName(m);break;case"object":u[m]=n(p,{});break}}return u}function r(l,u,m){for(const p in l.desc)a(l,p,u,m);return u}function a(l,u,m,p){const c=l.find(u);if(!c)throw new Error("Could not find parameter "+u);if(c instanceof K){const b=c._desc;if(b.choices)return m.add(c,"value",b.choices).name(c.name).setValue(c.value).onChange(()=>p(c));if(b.type==="vec3"){const f=m.addFolder(b.name);return f.open(),f.add(c.value,"x").step(.1).onChange(()=>p(c)),f.add(c.value,"y").step(.1).onChange(()=>p(c)),f.add(c.value,"z").step(.1).onChange(()=>p(c)),f}else if(b.type==="hsv"){const f=m.addFolder(b.name);return f.open(),f.add(c.value,"x").name("hue").step(.1).onChange(()=>p(c)),f.add(c.value,"y").name("saturation").step(.1).onChange(()=>p(c)),f.add(c.value,"z").name("value").step(.1).onChange(()=>p(c)),f}else if(b.type==="rot"){const f=m.addFolder(b.name);return f.open(),f.add(c.value,"yaw",-1,1,.01).onChange(()=>p(c)),f.add(c.value,"pitch",-1,1,.01).onChange(()=>p(c)),f.add(c.value,"roll",-1,1,.01).onChange(()=>p(c)),f}else if(b.type==="color"){const f=m.addColor(c,"value").name(c.name);return f.onChange(()=>p(c)),f}else{const f=m.add(c,"value",b.min,b.max,b.step).name(c.name);return f.onChange(()=>p(c)),f}}else{const b=m.addFolder(u);return r(c,b,p),b}}function h(l,u){return new G(l,u)}function d(l){return h("boolean",l)}function g(l){return h("string",l)}function w(l=0){return h("float",l)}}};class U{constructor(e,t,s,n,r,a){i(this,"description");i(this,"association");i(this,"semantic");i(this,"attributeTypeIndex");i(this,"dataType");i(this,"dataArity");if(!e.startsWith("g3d:"))throw new Error(`${e} must start with 'g3d'`);this.description=e,this.association=t,this.semantic=s,this.attributeTypeIndex=n,this.dataType=r,this.dataArity=parseInt(a)}static fromString(e){const t=e.split(":");if(t.length!==6)throw new Error(`${e}, must have 6 components delimited by ':'`);return new this(e,t[1],t[2],t[3],t[4],t[5])}matches(e){const t=(s,n)=>s==="*"||n==="*"||s===n;return t(this.association,e.association)&&t(this.semantic,e.semantic)&&t(this.attributeTypeIndex,e.attributeTypeIndex)&&t(this.dataType,e.dataType)}}class k{constructor(e,t){i(this,"descriptor");i(this,"bytes");i(this,"data");this.descriptor=e,this.bytes=t,this.data=k.castData(t,e.dataType)}static fromString(e,t){return new this(U.fromString(e),t)}static castData(e,t){switch(t){case"float32":return new Float32Array(e.buffer,e.byteOffset,e.byteLength/4);case"float64":throw new Float64Array(e.buffer,e.byteOffset,e.byteLength/8);case"int8":return e;case"int16":return new Int16Array(e.buffer,e.byteOffset,e.byteLength/2);case"int32":return new Int32Array(e.buffer,e.byteOffset,e.byteLength/4);default:throw new Error("Unrecognized attribute data type "+t)}}}class Oe{constructor(e,t){i(this,"meta");i(this,"attributes");this.meta=e,this.attributes=t}findAttribute(e){const t=U.fromString(e);for(let s=0;s<this.attributes.length;++s){const n=this.attributes[s];if(n.descriptor.matches(t))return n}return null}}class S{}i(S,"position","g3d:vertex:position:0:float32:3"),i(S,"indices","g3d:corner:index:0:int32:1"),i(S,"instanceMeshes","g3d:instance:mesh:0:int32:1"),i(S,"instanceTransforms","g3d:instance:transform:0:float32:16"),i(S,"meshSubmeshes","g3d:mesh:submeshoffset:0:int32:1"),i(S,"submeshIndexOffsets","g3d:submesh:indexoffset:0:int32:1"),i(S,"submeshMaterials","g3d:submesh:material:0:int32:1"),i(S,"materialColors","g3d:material:color:0:float32:4");class Fe{constructor(e){i(this,"positions");i(this,"indices");i(this,"instanceMeshes");i(this,"instanceTransforms");i(this,"meshSubmeshes");i(this,"submeshIndexOffset");i(this,"submeshMaterial");i(this,"materialColors");i(this,"rawG3d");i(this,"matrixArity",16);i(this,"colorArity",4);i(this,"positionArity",3);var t,s,n,r,a,h,d,g;this.rawG3d=e,this.positions=(t=e.findAttribute(S.position))==null?void 0:t.data,this.indices=(s=e.findAttribute(S.indices))==null?void 0:s.data,this.meshSubmeshes=(n=e.findAttribute(S.meshSubmeshes))==null?void 0:n.data,this.submeshIndexOffset=(r=e.findAttribute(S.submeshIndexOffsets))==null?void 0:r.data,this.submeshMaterial=(a=e.findAttribute(S.submeshMaterials))==null?void 0:a.data,this.materialColors=(h=e.findAttribute(S.materialColors))==null?void 0:h.data,this.instanceMeshes=(d=e.findAttribute(S.instanceMeshes))==null?void 0:d.data,this.instanceTransforms=(g=e.findAttribute(S.instanceTransforms))==null?void 0:g.data}getMeshSubmeshRange(e){const t=this.meshSubmeshes[e],s=e<this.meshSubmeshes.length-1?this.meshSubmeshes[e+1]:this.submeshIndexOffset.length;return[t,s]}getSubmeshIndexRange(e){const t=this.submeshIndexOffset[e],s=e<this.submeshIndexOffset.length-1?this.submeshIndexOffset[e+1]:this.indices.length;return[t,s]}validate(){const e=(t,s)=>{if(!t)throw new Error(`Missing Attribute Buffer: ${s}`)};if(e(this.positions,"position"),e(this.indices,"indices"),e(this.instanceMeshes,"instanceMeshes"),e(this.instanceTransforms,"instanceTransforms"),e(this.meshSubmeshes,"meshSubmeshes"),e(this.submeshIndexOffset,"submeshIndexOffset"),e(this.submeshMaterial,"submeshMaterial"),e(this.materialColors,"materialColors"),this.positions.length%this.positionArity!=0)throw new Error("Invalid position buffer, must be divisible by "+this.positionArity);if(this.indices.length%3!=0)throw new Error("Invalid Index Count, must be divisible by 3");for(let t=0;t<this.indices.length;t++)if(this.indices[t]<0||this.indices[t]>=this.positions.length)throw new Error("Vertex index out of bound");if(this.instanceMeshes.length!==this.instanceTransforms.length/this.matrixArity)throw new Error("Instance buffers mismatched");if(this.instanceTransforms.length%this.matrixArity!=0)throw new Error("Invalid InstanceTransform buffer, must respect arity "+this.matrixArity);for(let t=0;t<this.instanceMeshes.length;t++)if(this.instanceMeshes[t]>=this.meshSubmeshes.length)throw new Error("Instance Mesh Out of range.");for(let t=0;t<this.meshSubmeshes.length;t++)if(this.meshSubmeshes[t]<0||this.meshSubmeshes[t]>=this.submeshIndexOffset.length)throw new Error("MeshSubmeshOffset out of bound at");for(let t=0;t<this.meshSubmeshes.length-1;t++)if(this.meshSubmeshes[t]>=this.meshSubmeshes[t+1])throw new Error("MeshSubmesh out of sequence.");if(this.submeshIndexOffset.length!==this.submeshMaterial.length)throw new Error("Mismatched submesh buffers");for(let t=0;t<this.submeshIndexOffset.length;t++)if(this.submeshIndexOffset[t]<0||this.submeshIndexOffset[t]>=this.indices.length)throw new Error("SubmeshIndexOffset out of bound");for(let t=0;t<this.submeshIndexOffset.length;t++)if(this.submeshIndexOffset[t]%3!=0)throw new Error("Invalid SubmeshIndexOffset, must be divisible by 3");for(let t=0;t<this.submeshIndexOffset.length-1;t++)if(this.submeshIndexOffset[t]>=this.submeshIndexOffset[t+1])throw new Error("SubmeshIndexOffset out of sequence.");for(let t=0;t<this.submeshMaterial.length;t++)if(this.submeshMaterial[t]>=this.materialColors.length)throw new Error("submeshMaterial out of bound");if(this.materialColors.length%this.colorArity!=0)throw new Error("Invalid material color buffer, must be divisible by "+this.colorArity)}}class ke{constructor(e,t,s,n,r){i(this,"magic");i(this,"dataStart");i(this,"dataEnd");i(this,"numArrays");if(e!==49061)throw new Error("Not a BFAST file, or endianness is swapped");if(t<=32||t>r)throw new Error("Data start is out of valid range");if(s<t||s>r)throw new Error("Data end is out of vaid range");if(n<0||n>s)throw new Error("Number of arrays is invalid");this.magic=e,this.dataStart=t,this.dataEnd=s,this.numArrays=n}static fromArray(e,t){if(e[1]!==0)throw new Error("Expected 0 in byte position 0");if(e[3]!==0)throw new Error("Expected 0 in byte position 8");if(e[5]!==0)throw new Error("Expected 0 in position 16");if(e[7]!==0)throw new Error("Expected 0 in position 24");return new this(e[0],e[2],e[4],e[6],t)}}class Le{constructor(e,t,s){i(this,"header");i(this,"names");i(this,"buffers");this.header=e,this.names=t,this.buffers=s}}class Ve{constructor(e){i(this,"material");i(this,"timerName");i(this,"constructVIM",e=>{if(e.buffers.length<5)throw new Error("VIM requires at least five BFast buffers");const t=new Map;for(let m=0;m<e.buffers.length;++m)t.set(e.names[m],e.buffers[m]);const s=t.get("assets"),n=t.get("geometry"),r=t.get("header"),a=t.get("entities"),h=t.get("strings");this.log(`Parsing header: ${r.length} bytes`);const d=new TextDecoder("utf-8").decode(r);this.log(`Constructing G3D: ${n.length} bytes`);const g=new Fe(this.constructG3D(this.parseBFastFromArray(n)));this.log("Validating G3D"),g.validate(),this.log(`Retrieving assets: ${s.length} bytes`);const w=this.parseBFastFromArray(s);this.log(`Found ${w.buffers.length} assets`),this.log(`Constructing entity tables: ${a.length} bytes`);const l=this.constructEntityTables(this.parseBFastFromArray(a));this.log(`Found ${l.length} entity tables`),this.log(`Decoding strings: ${h.length} bytes`);const u=new TextDecoder("utf-8").decode(h).split("\0");return this.log(`Found ${u.length} strings`),new M(d,w,g,l,u)});i(this,"allocateGeometry",e=>{const t=e.meshSubmeshes.length,s=new Float32Array(e.positions.length),n=new Int32Array(e.indices.length),r=[];for(let a=0;a<t;a++){let h=Number.MAX_SAFE_INTEGER,d=0,g=0;const[w,l]=e.getMeshSubmeshRange(a);for(let c=w;c<l;c++){const b=this.getSubmeshColor(e,c);if(!b)continue;const[f,z]=e.getSubmeshIndexRange(c);for(let A=f;A<z;A++){const I=e.indices[A];n[g++]=I,h=Math.min(h,I),d=Math.max(d,I),b.toArray(s,I*3)}}if(g===0){r.push(null);continue}const u=h*3,m=(d+1)*3;for(let c=0;c<g;c++)n[c]-=h;const p=this.createBufferGeometry(e.positions.subarray(u,m),n.subarray(0,g),s.subarray(u,m));p.computeBoundingSphere(),r.push(p)}return r});i(this,"defaultColor",new D(.5,.5,.5));i(this,"countMeshReferences",(e,t)=>{const s=new Int32Array(t);for(let n=0;n<e.length;++n){const r=e[n];r<0||s[r]++}return s});this.material=e,this.timerName="VIM Loader"}logStart(){console.time(this.timerName)}log(e){console.timeLog(this.timerName,e)}logEnd(){console.timeEnd(this.timerName)}timeAction(e,t){console.log("Started "+e);const s="Ended "+e;console.time(s);const n=t();return console.timeEnd(s),n}load(e,t,s,n){this.logStart();const r=new Q;r.setResponseType("arraybuffer"),r.setRequestHeader({"Content-Encoding":"gzip"}),r.load(e,a=>{if(this.log("Data arrived"),typeof a=="string"){n==null||n(new ErrorEvent("Unsupported string loader response"));return}let h;try{h=this.parse(a)}catch(d){const g=d;console.log(`Error occured when loading VIM from ${e}, message = ${g} at = ${g.stack}`),n==null||n(new ErrorEvent("Loading Error",{error:d}));return}this.log("Calling onLoad() parameter"),t==null||t(h),this.log("Finished calling onLoad() parameter")},s,n),this.log("Finished loading")}parseBFastFromArray(e){return this.parseBFast(e.buffer,e.byteOffset,e.byteLength)}parseBFast(e,t=0,s=e.byteLength-t){const n=new Int32Array(e,t,s/4),r=ke.fromArray(n,s),a=[];let h=8;for(let w=0;w<r.numArrays;++w){const l=n[h+0],u=n[h+2];if(n[h+1]!==0)throw new Error("Expected 0 in position "+(h+1)*4);if(n[h+3]!==0)throw new Error("Expected 0 in position "+(h+3)*4);if(l<r.dataStart||l>r.dataEnd)throw new Error("Buffer start is out of range");if(u<l||u>r.dataEnd)throw new Error("Buffer end is out of range");h+=4;const m=new Uint8Array(e,l+t,u-l);a.push(m)}if(a.length<0)throw new Error("Expected at least one buffer containing the names");const d=new TextDecoder("utf-8").decode(a[0]);let g=d.slice(0,-1).split("\0");if(d.length===0&&(g=[]),g.length!==a.length-1)throw new Error("Expected number of names to be equal to the number of buffers - 1");return new Le(r,g,a.slice(1))}constructEntityTable(e){const t=new Map;for(let s=0;s<e.buffers.length;++s){const n=e.names[s].split(":"),r=n[0],a=n[1],h=e.buffers[s];let d;if(r==="numeric")d=new Float64Array(h.buffer,h.byteOffset,h.byteLength/8),t.set(a,d);else if(r==="string"||r==="index")d=new Int32Array(h.buffer,h.byteOffset,h.byteLength/4),t.set(a,d);else if(r==="properties")d=new Int32Array(h.buffer,h.byteOffset,h.byteLength/4),t.set("properties",h);else throw new Error("Unrecognized column type "+r)}return t}constructEntityTables(e){const t=new Map;for(let s=0;s<e.buffers.length;++s){const n=e.names[s],r=n.substring(n.indexOf(":")+1),a=e.buffers[s];this.log(`Constructing entity table ${n} which is ${a.length} size`);const h=this.constructEntityTable(this.parseBFastFromArray(a));t.set(r,h)}return t}constructG3D(e){if(console.log("Constructing G3D"),e.buffers.length<2)throw new Error("G3D requires at least two BFast buffers");const t=e.buffers[0];if(e.names[0]!=="meta")throw new Error("First G3D buffer must be named 'meta', but was named: "+e.names[0]);const s=new TextDecoder("utf-8").decode(t),n=[],r=e.buffers.length-1;for(let a=0;a<r;++a){const h=k.fromString(e.names[a+1],e.buffers[a+1]);n.push(h),console.log(`Attribute ${a} = ${h.descriptor.description}`)}return new Oe(s,n)}createBufferGeometry(e,t,s=void 0){const n=new P;return n.setAttribute("position",new B(e,3)),n.setIndex(new X(t,1)),s&&n.setAttribute("color",new B(s,3)),n}getSubmeshColor(e,t){const s=e.submeshMaterial[t];if(s<0)return this.defaultColor;const n=s*e.colorArity;if(!(e.materialColors[n+3]<.9))return new D().fromArray(e.materialColors,n)}parse(e){const t=this.timeAction("Parsing Vim",()=>this.parseBFast(e));console.log(`found: ${t.buffers.length} buffers`),console.log(t.names.join(", "));const s=this.timeAction("Creating VIM",()=>this.constructVIM(t)),n=this.timeAction("Allocating Geometry",()=>this.allocateGeometry(s.g3d));console.log("Found # meshes "+n.length);const r=this.timeAction("Counting references",()=>this.countMeshReferences(s.g3d.instanceMeshes,n.length)),a=this.timeAction("Allocating Meshes",()=>this.allocateMeshes(n,r)),h=this.timeAction("Applying Matrices",()=>this.applyMatrices(a,s.g3d.instanceMeshes,s.g3d.instanceTransforms));console.log("Merging geometry");const d=[];for(let l=0;l<s.g3d.instanceMeshes.length;l++){const u=s.g3d.instanceMeshes[l];if(u<0)continue;const m=n[u];if(!!m&&r[u]===1){const p=s.g3d.instanceTransforms.subarray(l*s.g3d.matrixArity,(l+1)*s.g3d.matrixArity),c=new v;c.elements=Array.from(p),m.applyMatrix4(c),d.push(m)}}const g=J(d),w=new T(g,this.material,1);return w.setMatrixAt(0,new v),g.computeBoundingSphere(),h.meshes.push(w),h.boundingSphere=g.boundingSphere,console.log("Loading Completed"),new R(s,h)}allocateMeshes(e,t){const s=e.length,n=[];for(let r=0;r<s;++r){const a=t[r];if(a<=1){n.push(null);continue}const h=e[r];if(h===null){n.push(null);continue}const d=new T(h,this.material,a);n.push(d)}return n}applyMatrices(e,t,s){const n=16,r=new Int32Array(e.length);let a=null;const h=new Map,d=new Map,g=[];for(let w=0;w<t.length;++w){const l=t[w];if(l<0)continue;const u=e[l];if(!u)continue;const m=r[l]++,p=s.subarray(w*n,(w+1)*n),c=new v;c.elements=Array.from(p),u.setMatrixAt(m,c),h.set(w,[u,m]);const b=d.get(u.id);b?b.push(w):d.set(u.id,[w]);const f=u.geometry.boundingSphere.clone();f.applyMatrix4(c),a=a?a.union(f):f,g.push(u)}return new ve(g,a!=null?a:new _,h,d)}}const Pe=new O({color:10066329,vertexColors:!0,flatShading:!0,side:Z,shininess:70});function Be(o){const e=o.lastIndexOf("?");e>=0&&(o=o.substring(0,e));const t=o.lastIndexOf(".");return o.slice(t+1).toLowerCase()}const Ne=function(o,e){const t=Be(o);switch(t){case"3ds":{new ae().load(o,e);return}case"fbx":{new oe().load(o,e);return}case"dae":{new re().load(o,s=>{e(s.scene)});return}case"gltf":{new ne().load(o,s=>{e(s.scene)});return}case"gcode":{new ie().load(o,e);break}case"obj":{new se().load(o,e);break}case"pcd":{new te().load(o,e);break}case"ply":{new ee().load(o,e);break}case"stl":{new j().load(o,e);break}case"vim":{new Ve(Pe).load(o,e);break}default:throw new Error("Unrecognized file type extension '"+t+"' for file "+o)}};class Re{constructor(e){i(this,"viewer");i(this,"mesh",null);i(this,"instanceIndex",null);i(this,"boundingSphere",null);i(this,"geometry",null);i(this,"highlightDisposer",null);this.viewer=e}hasSelection(){return this.mesh!==null}reset(){this.mesh=null,this.instanceIndex=null,this.boundingSphere=null,this.disposeResources()}disposeResources(){var e,t;(e=this.geometry)==null||e.dispose(),this.geometry=null,(t=this.highlightDisposer)==null||t.call(this),this.highlightDisposer=null}select(e,t){this.disposeResources(),this.mesh=e,this.instanceIndex=t,this.geometry=this.viewer.createWorldGeometry(e,t),this.geometry.computeBoundingSphere(),this.boundingSphere=this.geometry.boundingSphere,this.highlightDisposer=this.viewer.highlight(this.geometry)}}class L{constructor(e,t,s){i(this,"plane");i(this,"skyLight");i(this,"sunLight");this.plane=e,this.skyLight=t,this.sunLight=s}static createDefault(){const e=new C(new he(1e3,1e3),new O);e.rotation.x=-Math.PI/2;const t=new ce(16777215,16777215,.6);t.color.setHSL(.6,1,.6),t.groundColor.setHSL(.095,1,.75),t.position.set(0,50,0);const s=new le(16777215,1);return s.color.setHSL(.1,1,.95),s.position.set(-1,1.75,1),s.position.multiplyScalar(30),new L(e,t,s)}getElements(){return[this.plane,this.skyLight,this.sunLight]}applySettings(e){this.plane.visible=e.plane.show,this.plane.material instanceof O&&He(this.plane.material,e.plane.material),this.plane.position.copy(Qe(e.plane.position)),this.skyLight.color.setHSL(e.skylight.skyColor.h,e.skylight.skyColor.s,e.skylight.skyColor.l),this.skyLight.groundColor.setHSL(e.skylight.groundColor.h,e.skylight.groundColor.s,e.skylight.groundColor.l),this.skyLight.intensity=e.skylight.intensity,this.sunLight.color.setHSL(e.sunLight.color.h,e.sunLight.color.s,e.sunLight.color.l),this.sunLight.position.set(e.sunLight.position.x,e.sunLight.position.y,e.sunLight.position.z),this.sunLight.intensity=e.sunLight.intensity}}class Ge{constructor(e){i(this,"camera");i(this,"renderer");i(this,"scene");i(this,"clock",new ue);i(this,"canvas");i(this,"boundingSphere");i(this,"meshes",[]);this.canvas=e,this.renderer=new me({canvas:this.canvas,antialias:!0,precision:"lowp",alpha:!1,stencil:!1,powerPreference:"high-performance"}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.shadowMap.enabled=!1,this.camera=new de,this.scene=new N,this.boundingSphere=new _,this.fitToCanvas()}render(){this.renderer.render(this.scene,this.camera)}fitToCanvas(){const e=window.innerWidth/window.devicePixelRatio,t=window.innerHeight/window.devicePixelRatio;this.renderer.setSize(e,t,!1),this.camera.aspect=this.canvas.width/this.canvas.height,this.camera.updateProjectionMatrix()}addToScene(e){e.forEach(t=>{this.scene.add(t)})}addToModel(e){e.forEach(t=>{this.scene.add(t),this.meshes.push(t)})}updateModel(e){for(let t=0;t<this.meshes.length;t++)this.meshes[t].matrixAutoUpdate=!1,this.meshes[t].matrix.copy(e)}computeBoundingSphere(e){this.boundingSphere=this._computeBoundingSphere(this.scene),this.boundingSphere.applyMatrix4(e)}_computeBoundingSphere(e){let t;const s=(r,a)=>{r.computeBoundingSphere();let h=r.boundingSphere.clone();h=h.applyMatrix4(a),t=t?t.union(h):h},n=new v;return e.traverse(r=>{if(r instanceof T)for(let a=0;a<r.count;a++)r.getMatrixAt(a,n),s(r.geometry,n);else r instanceof C&&s(r.geometry,r.matrix)}),t!=null?t:new _}}var Ue="./assets/logo.93547066.png";class ze{constructor(e){i(this,"canvas");i(this,"logo");i(this,"link");let t=document.getElementById(e.canvasId);t||(t=document.createElement("canvas"),document.body.appendChild(t)),this.canvas=t;const s=document.createElement("img");s.src=Ue,s.style.position="fixed",s.style.top="16px",s.style.left="16px",s.height=48,s.width=128,this.logo=s;const n=document.createElement("a");n.href="https://vimaec.com",n.appendChild(this.logo),document.body.prepend(n),this.link=n}}class $e{constructor(e){i(this,"stats");i(this,"settings");i(this,"htmlDocument");i(this,"environment");i(this,"render");i(this,"selection");i(this,"cameraController");i(this,"controls");i(this,"vimScene");this.settings=fe(xe.default,e,void 0),this.htmlDocument=new ze(this.settings),this.settings.showGui&&_e.bind(this.settings,t=>{this.settings=t,this.ApplySettings()}),this.render=new Ge(this.htmlDocument.canvas),this.cameraController=new De(this.render.camera,this.settings),this.environment=L.createDefault(),this.settings.showStats&&(this.stats=new pe,this.stats.dom.style.top="84px",this.stats.dom.style.left="16px",document.body.appendChild(this.stats.dom)),this.controls=new Ye(this.htmlDocument.canvas,this.cameraController,this),this.controls.register(),this.selection=new Re(this),Ne(this.settings.url,this.loadInScene.bind(this)),this.ApplySettings(),this.animate()}prepareDocument(){}loadInScene(e){e instanceof R?this.onVimLoaded(e):e instanceof N?e.traverse(t=>{t instanceof C&&this.render.addToModel([t])}):e instanceof P?(e.computeVertexNormals(),this.render.addToModel([new C(e)])):(e instanceof ge||e instanceof we)&&this.render.addToModel([e]),this.render.boundingSphere||this.render.computeBoundingSphere(this.getViewMatrix()),this.focusModel(),this.ApplySettings()}onVimLoaded(e){this.vimScene=e,console.log("Adding models to scene"),this.render.addToModel(e.geometry.meshes),console.log("Adding environement to scene"),this.render.addToScene(this.environment.getElements());const t=e.geometry.boundingSphere.clone();t.applyMatrix4(this.getViewMatrix()),this.render.boundingSphere=t,this.render.updateModel(this.getViewMatrix()),console.log("Everything ready"),console.time("FirstRender"),this.render.render(),console.timeEnd("FirstRender")}animate(){requestAnimationFrame(()=>this.animate());const e=this.render.clock.getDelta();this.cameraController.frameUpdate(e),this.settings.autoResize&&this.render.fitToCanvas(),this.render.render(),this.stats&&this.stats.update()}getViewMatrix(){const e=this.settings.object.position,t=Ze(this.settings.object.rotation),s=Xe(.1);return new v().compose(e,t,s)}highlight(e){const t=new be(e),s=new ye({depthTest:!1,opacity:.5,color:new D(255),transparent:!0}),n=new Ee(t,s);return this.render.addToScene([n]),()=>{this.render.scene.remove(n),t.dispose(),s.dispose()}}createWorldGeometry(e,t){const s=e.geometry.clone();let n=new v;return e instanceof T?e.getMatrixAt(t,n):n.copy(e.matrix),n=this.getViewMatrix().multiply(n),s.applyMatrix4(n),s}selectByElementId(e){if(!this.vimScene)return;const t=this.vimScene.getMeshesFromElement(e);t?this.select(t[0][0],t[0][1]):console.log(`Could not find mesh for elemetId ${e}`)}select(e,t){if(!this.vimScene)return;if(!e)throw new Error("Invalid null mesh");if(t<0)throw new Error("invalid negative index");this.selection.select(e,t);const s=this.vimScene.getNodeIndexFromMesh(e,t);if(s===void 0){console.log("Could not find node for given mesh");return}const n=this.vimScene.getElementIdFromNodeIndex(s),r=this.vimScene.getElementNameFromNodeIndex(s);console.log(`Selected Element: ${n} - ${r}`)}clearSelection(){this.selection.reset(),console.log("Cleared Selection")}focusSelection(){this.selection.hasSelection()?this.cameraController.lookAtSphere(this.selection.boundingSphere):this.cameraController.frameScene(this.render.boundingSphere)}focusModel(){this.cameraController.frameScene(this.render.boundingSphere)}ApplySettings(){this.render.scene.background=Y(this.settings.background.color),this.environment.applySettings(this.settings),this.cameraController.applySettings(this.settings)}}function He(o,e){"color"in e&&(o.color=Y(e.color)),"flatShading"in e&&(o.flatShading=e.flatShading),"emissive"in e&&(o.emissive=Y(e.emissive)),"specular"in e&&(o.specular=Y(e.specular)),"wireframe"in e&&(o.wireframe=e.wireframe),"shininess"in e&&(o.shininess=e.shininess)}function qe(o){return typeof o=="object"&&"r"in o&&"g"in o&&"b"in o}function Y(o){if(!qe(o))throw new Error("Not a color");return new D(o.r/255,o.g/255,o.b/255)}function We(o){return typeof o=="object"&&"x"in o&&"y"in o&&"z"in o}function Qe(o){if(!We(o))throw new Error("Not a vector");return new y(o.x,o.y,o.z)}function Xe(o){return new y(o,o,o)}function Je(o){return new V(o.x*Math.PI/180,o.y*Math.PI/180,o.z*Math.PI/180)}function Ze(o){const e=new Se;return e.setFromEuler(Je(o)),e}const je=new $e({url:"./stadium.vim",object:{scale:.1,rotation:{x:270},position:{y:0}},plane:{show:!1},showStats:!0});globalThis.viewer=je;
